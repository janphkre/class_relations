@startuml
!$pathToRoot = ".."
!$pathToSourceSources = "$pathToRoot/../sources"
!$pathToDocsBase = "$pathToRoot/basic_example"
package "basic_example" as p\$_0 #00FF00 {
    class "[[$pathToSourceSources/basic_example/BasicClass.kt BasicClass]]" as BasicClass {
    }
    class "[[$pathToSourceSources/basic_example/ClassWithDistinctDeps.kt ClassWithDistinctDeps]]" as ClassWithDistinctDeps {
    }
    class "[[$pathToSourceSources/basic_example/ClassWithMethods.kt ClassWithMethods]]" as ClassWithMethods {
        {method} methodA
        {method} methodB
        {method} methodC
    }
    class "[[$pathToSourceSources/basic_example/ClassWithUsages.kt ClassWithUsages]]" as ClassWithUsages {
        {method} methodA
        {method} methodB
        {method} methodC
    }
    enum "[[$pathToSourceSources/basic_example/EnumClass.kt EnumClass]]" as EnumClass {
    }
}
package "[[$pathToRoot/../external_com_example/example_relations.puml com.example]]" as p\$_1 #ffffff {
    package "b" as p\$_2 #ffffff {
        interface "ParameterClassB"
        interface "UsageClassB"
        interface "UsageClassC"
    }
    package "c" as p\$_3 #ffffff {
        interface "ParameterClassD"
    }
}
package "com.other" as p\$_4 #ffffff {
    interface "ParameterClassE"
}
package "io.other" as p\$_5 #ffffff {
    interface "UsageClassE"
    interface "UsageClassF"
}

ClassWithDistinctDeps .up.|> ParameterClassB
ClassWithDistinctDeps o-down- ParameterClassA
ClassWithDistinctDeps o-down- ParameterClassB
ClassWithDistinctDeps o-down- ParameterClassD
ClassWithDistinctDeps o-down- ParameterClassE
ClassWithUsages -down-> UsageClassB
ClassWithUsages -down-> UsageClassC
ClassWithUsages -down-> UsageClassE
ClassWithUsages -down-> UsageClassF
ClassWithUsages -down-> Unit
@enduml
